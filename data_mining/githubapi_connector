import json
import requests
import csv

# Put your access token here
access_token = '71315f773eb1fb42260dc84712bee0ac7c844e73'   # put your github authentication token here
max_page = 135  # users we can extract per Github query
limit = 5000     # this indicates the number of users we want to extract; Github users ~ 1.5-2 million

repo_name = 'pacman'  # keywords of the repositories we want to search for
csv_name = 'repo.csv'

class GithubAPI(object):
    prefix_url = 'https://api.github.com'
    default_fields = ['login', 'id']        # this is not yet working; it always extracts all properties

    def __init__(self, access_token):
        self.access_token = access_token
        self.max_page = max_page
        self.limit = limit

    def get_request(self, path, params={}):
        params['access_token'] = self.access_token
        url = self.prefix_url + path
        # Make a request with the given url and parameters 
        # Return the JSON form of the request
        r = requests.get(url, params=params)
        return r.json()

    def get_user(self, start_id, fields=None):
        # Define the path (i.e., the url)
        path = '/users'
        if not fields:
            fields = GithubAPI.default_fields
            print fields
        return self.get_request(path, {'fields': ','.join(fields), 'per_page': self.max_page, 'since': start_id})

    def get_all_users(self, fields=None):
        data = []
        start_id = 0

        while (start_id < self.limit):
            data += self.get_user(start_id)
            start_id += self.max_page
        return data

    def get_repositories(self, keywords):
        path = '/search/repositories?q=' + keywords
        r = self.get_request(path)
        return r['items']

def main():
    # Create a GithubAPI object
    # Perform a request on the board 'bdatascience/ikea-lab' using get_board_pins
    # Take a look at how many pins you found using len(<request JSON>['data'])
    # Now, use get_all_board_pins to get *all* of the board's pins
    # The following will save your pins to a file, assuming your pins are in
    # a variable called pins
    githubAPI = GithubAPI(access_token)

    # users = githubAPI.get_all_users()
    #
    # with open('users_logins.csv', 'wb') as f_csv:
    #     writer = csv.writer(f_csv)
    #     writer.writerow(["login", "id"])
    #     for user in users:
    #         # here we choose the properties of a user we decide to record into the .csv file
    #         writer.writerow([user['login'].encode('utf-8'), user['id']])

    with open(csv_name, "wb") as f_csv:
        writer = csv.writer(f_csv)
        writer.writerow(["id", "name", "html_url", "forks", "stars", "size"])
        for repo in githubAPI.get_repositories(repo_name):
            writer.writerow([repo['id'], repo['name'], repo['html_url'], repo['forks'], repo['watchers'], repo['size']])


if __name__ == '__main__':
    main()
